version: "1.3.1"

metadata:
  name: "meme-generator-1"
  description: "Generates meme data based on template and user input"
  author: "v1p3r"
  tags: [meme, fun]
  private: true

inputs:
  user-prompt:
    type: string
    description: "User-provided description of the meme"
    required: true
    example: "Generate a meme about cows"
  box-count:
    type: number
    description: "Number of input boxes in the meme"
    required: true
    example: 2
  template-name:
    type: string
    description: "Meme template name"
    required: true
    example: "Drake Hotline Bling"

model:
  provider: openai
  name: gpt-4o

dataset:
  source: "v1p3r/memes"

prompt: |
  You are a meme generator AI. Your task is to generate text for the placeholders of a given meme template based on the user's input. 

  **Inputs:**
  - **User Prompt:** "{user-prompt}" (Describes the context or concept for the meme)
  - **Box Count:** {box-count} (The number of text placeholders in the meme template)
  - **Template Name:** "{template-name}" (The specific meme template that is being used)

  **Task:**
  1. Analyze the **User Prompt** to understand its theme, tone, and context.
  2. Based on the **Template Name**, identify how the meme structure typically works (e.g., how many placeholders are used, what kind of text fits in each box).
  3. Using the **Box Count**, generate the appropriate number of strings that would fill the placeholders for this specific meme template.
  4. Return each generated string in a sequence. If the template has 3 boxes, return 3 strings, each corresponding to one placeholder.

  **Output Format:**
  - The response **must** be a valid JSON **array of objects**, with each object containing only a `"text"` field.
  - The output should be a **single-line JSON array** without extra whitespace or newlines.
  - **Strictly return only JSON**, without explanations, additional text, or formatting inconsistencies.
  - Ensure the output maintains the order and count of placeholders based on the **Box Count**. Also it should be consistent in format.
  - Avoid output in backticks or any other formatting that is not JSON. ALWAYS ALWAYS OUTPUT IN JSON FORMAT.
  - The text should align with the meme's typical tone (humorous, sarcastic, intellectual, etc.).
    the tone matches the meme's typical style (humorous, sarcastic, intellectual, etc.).
  
readme: |
  # Meme Generator Flow
  This flow generates meme content based on a template and user input.
  - It uses GPT-4o to match the provided **user-prompt** with the **template-name** and determine how to fill the meme's placeholders.
  - The number of placeholders is determined by the **box_count**, and it will output that many pieces of text for each placeholder in the meme template.
  - The output should align with the tone and format of the meme template.
